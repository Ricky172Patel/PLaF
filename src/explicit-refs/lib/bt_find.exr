let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3}
in let find_bt = proc (t) { proc (v) { 
    letrec find_bt_helper (nd) = 
      if number?(nd) then return (BoolVal false)
      else if (nd.data) = v then return (BoolVal true)
      else
        let left_search = find_bt_helper nd.left in
        let right_search = find_bt_helper nd.right in
        return (BoolVal (left_search || right_search))
    in find_bt_helper t.root
  }}
in ((find_bt t1) 12)